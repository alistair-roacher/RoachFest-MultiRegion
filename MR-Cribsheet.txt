Useful Commands
---------------

cockroach node status --certs-dir=/root/certs --host=node1:26257

cockroach sql --certs-dir=/root/certs --host=node1:26257

SHOW node_id;
SHOW locality;

SHOW REGIONS FROM CLUSTER;
SHOW DATABASES;

select node_id, locality, ranges, leases, is_live from crdb_internal.gossip_nodes;

update system.locations set "localityValue" = substr("localityValue",1,length("localityValue")-1) where "localityValue" like '%1'; 
update system.locations set latitude=50, longitude=-100 where "localityValue" = 'us-central'; 

select * from system.replication_critical_localities;

select nst.id, ifnull(nsd.name,'---->') as database, ifnull(nss.name,'---->') as schema, nst.name 
  from system.namespace nst 
    left join system.namespace nsd on nst."parentID" = nsd.id 
    left join system.namespace nss on nst."parentSchemaID" = nss.id
order by 1;

with range_info AS (SHOW RANGES FROM TABLE movr_rides.rides WITH DETAILS)
 SELECT range_id,lease_holder,lease_holder_locality,replicas,non_voting_replicas,replica_localities from range_info;

SHOW ZONE CONFIGURATION FROM DATABASE movr_rides;

SHOW ZONE CONFIGURATIONS;




Cockroach DEMO
--------------

cockroach demo movr --nodes 9 --with-load --sql-port 30000 --demo-locality "region=us-east,zone=a:region=us-east,zone=b:region=us-east,zone=c:region=us-central,zone=a:region=us-central,zone=b:region=us-central,zone=c:region=us-west1,zone=a:region=us-west1,zone=b:region=us-west1,zone=c" 

show node_id;
  node_id
-----------
  1

show locality;
        locality
-------------------------
  region=us-east,zone=a

show regions;
    region   |  zones  | database_names | primary_region_of | secondary_region_of
-------------+---------+----------------+-------------------+----------------------
  us-central | {a,b,c} | {}             | {}                | {}
  us-east    | {a,b,c} | {}             | {}                | {}
  us-west1   | {a,b,c} | {}             | {}                | {}

select node_id, address, sql_address, locality from crdb_internal.gossip_nodes;
  node_id |     address     |   sql_address   |         locality
----------+-----------------+-----------------+---------------------------
        1 | 127.0.0.1:30100 | 127.0.0.1:30000 | region=us-east,zone=a
        2 | 127.0.0.1:30101 | 127.0.0.1:30001 | region=us-east,zone=b
        3 | 127.0.0.1:30102 | 127.0.0.1:30002 | region=us-east,zone=c
        4 | 127.0.0.1:30103 | 127.0.0.1:30003 | region=us-central,zone=a
        5 | 127.0.0.1:30104 | 127.0.0.1:30004 | region=us-central,zone=b
        6 | 127.0.0.1:30105 | 127.0.0.1:30005 | region=us-central,zone=c
        7 | 127.0.0.1:30106 | 127.0.0.1:30006 | region=us-west1,zone=a
        8 | 127.0.0.1:30107 | 127.0.0.1:30007 | region=us-west1,zone=b
        9 | 127.0.0.1:30108 | 127.0.0.1:30008 | region=us-west1,zone=c

demo@127.0.0.1:30000/movr> \?
You are using 'cockroach sql', CockroachDB's lightweight SQL client.
General
  \q, quit, exit    exit the shell (Ctrl+C/Ctrl+D also supported).
...
Commands specific to the demo shell (EXPERIMENTAL):
  \demo ls                     list the demo nodes and their connection URLs.
  \demo shutdown <nodeid>      stop a demo node.
  \demo restart <nodeid>       restart a stopped demo node.
  \demo decommission <nodeid>  decommission a node. This implies a shutdown.
  \demo add <locality>         add a node (locality specified as "region=<region>,zone=<zone>").

\demo ls

node 1:
   (webui)    http://127.0.0.1:8080/demologin?password=demo62996&username=demo
   (cli)      cockroach sql --certs-dir=/Users/alistairparry/.cockroach-demo -u demo -p 30000 -d movr
   (sql)      postgresql://demo:demo62996@127.0.0.1:30000/movr?sslmode=require&sslrootcert=%2FUsers%2Falistairparry%2F.cockroach-demo%2Fca.crt
   (sql/jdbc) jdbc:postgresql://127.0.0.1:30000/movr?password=demo62996&sslmode=require&sslrootcert=%2FUsers%2Falistairparry%2F.cockroach-demo%2Fca.crt&user=demo
   (sql/unix) postgresql://demo:demo62996@/movr?host=%2FUsers%2Falistairparry%2F.cockroach-demo&port=30000
   (rpc)      127.0.0.1:30100
...
node 9:
   (webui)    http://127.0.0.1:8088/demologin?password=demo62996&username=demo
   (cli)      cockroach sql --certs-dir=/Users/alistairparry/.cockroach-demo -u demo -p 30008 -d movr
   (sql)      postgresql://demo:demo62996@127.0.0.1:30008/movr?sslmode=require&sslrootcert=%2FUsers%2Falistairparry%2F.cockroach-demo%2Fca.crt
   (sql/jdbc) jdbc:postgresql://127.0.0.1:30008/movr?password=demo62996&sslmode=require&sslrootcert=%2FUsers%2Falistairparry%2F.cockroach-demo%2Fca.crt&user=demo
   (sql/unix) postgresql://demo:demo62996@/movr?host=%2FUsers%2Falistairparry%2F.cockroach-demo&port=30008
   (rpc)      127.0.0.1:30108


\demo add region=eu-west,zone=a
node 10 has been added with locality "region=eu-west,zone=a"

\demo add region=eu-west,zone=b
node 11 has been added with locality "region=eu-west,zone=b"

\demo add region=eu-west,zone=c
node 12 has been added with locality "region=eu-west,zone=c"

show regions;

    region   |  zones  | database_names | primary_region_of | secondary_region_of
-------------+---------+----------------+-------------------+----------------------
  eu-west    | {a,b,c} | {}             | {}                | {}
  us-central | {a,b,c} | {}             | {}                | {}
  us-east    | {a,b,c} | {}             | {}                | {}
  us-west1   | {a,b,c} | {}             | {}                | {}

You can access other nodes in the cluster to simulate loggin in to regions other than us-east
Note: you must keep the above demo window open in order to access other nodes in the cluster

# cockroach sql --certs-dir=/Users/alistairparry/.cockroach-demo -u demo -p 30008 -d movr

show node_id;
  node_id
-----------
  9

show locality;
         locality
--------------------------
  region=us-west1,zone=c

\demo ls
ERROR: \demo can only be run with cockroach demo


You can also access the DB Console through any of the available nodes:
http://127.0.0.1:8080/demologin?password=demo62996&username=demo
...
http://127.0.0.1:8088/demologin?password=demo62996&username=demo


You can apply changes above to the system.locations table to get the regions placed correctly on the map.



